- name: Remote deployment - backup public storage files
  hosts: gcp
  vars:
    home_path: "{{ ansible_facts['env']['HOME'] }}"
  tasks:
    - name: Create app-backup folder
      ansible.builtin.file:
        path: "{{ home_path }}/app-backup"
        state: directory
    - name: Move public folder to app-backup folder
      command: "mv {{ home_path }}/app/public {{ home_path }}/app-backup"
    - name: Move .env file to app-backup folder
      command: "mv {{ home_path }}/app/.env {{ home_path }}/app-backup"

- name: Remote deployment - stop running app service
  hosts: gcp
  tasks:
    - name: Stop systemd
      become: yes
      command: systemctl stop gigih-hub.service

- name: Remote deployment - transfer app build
  hosts: gcp
  vars:
    app_root_path: "{{ ansible_facts['env']['HOME'] }}/app"
  tasks:
    - name: Delete app folder
      ansible.builtin.file:
        path: "{{ app_root_path }}"
        state: absent
    - name: Create app folder
      ansible.builtin.file:
        path: "{{ app_root_path }}"
        state: directory
    - name: Copy app build to app directory in remote server
      ansible.builtin.copy:
          src: build.tgz
          dest: "{{ app_root_path }}/build.tgz"
    - name: Extract app build
      command: "tar -xvzf {{ app_root_path }}/build.tgz -C {{ app_root_path }}"
    - name: Delete app build
      ansible.builtin.file:
        path: "{{ app_root_path }}/build.tgz"
        state: absent

- name: Remote deployment - move backup files into app folder
  hosts: gcp
  vars:
    home_path: "{{ ansible_facts['env']['HOME'] }}"
  tasks:
    - name: Move public folder to app folder
      command: "mv {{ home_path }}/app-backup/public {{ home_path }}/app"
    - name: Move .env file to app-backup folder
      command: "mv {{ home_path }}/app-backup/.env {{ home_path }}/app"
    - name: Delete app-backup folder
      ansible.builtin.file:
        path: "{{ home_path }}/app-backup"
        state: absent